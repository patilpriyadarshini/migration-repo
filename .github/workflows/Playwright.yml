name: Playwright Tests
on:
  push:
    branches: [ main ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
        cache-dependency-path: ./Phase2_frontend
    - name: Install dependencies    
      working-directory: ./Phase2_frontend
      run: npm ci
    - name: Install Playwright Browsers
      working-directory: ./Phase2_frontend
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      working-directory: ./Phase2_frontend
      run: npx playwright test --reporter=html
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: ./Phase2_frontend/playwright-report/
        retention-days: 30
    - name: Deploy report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      if: ${{ !cancelled() }}
      with: 
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./Phase2_frontend/playwright-report
        destination_dir: reports/${{ github.run_number }}
        keep_files: true
        enable_jekyll: false
        force_orphan: true
    - name: Send HTML report content directly to n8n
      if: ${{ !cancelled() }}
      run: |
        cd ./Phase2_frontend
        
        # Check if HTML report exists
        if [ ! -f "playwright-report/index.html" ]; then
          echo "HTML report not found, skipping n8n notification"
          exit 0
        fi
        
        # Get HTML content and encode it properly for JSON
        HTML_CONTENT=$(cat playwright-report/index.html | jq -Rs .)
        
        # Create comprehensive report data with HTML content
        REPORT_DATA=$(jq -n \
          --arg timestamp "$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
          --arg commit "${{ github.sha }}" \
          --arg run_id "${{ github.run_id }}" \
          --arg run_number "${{ github.run_number }}" \
          --arg pages_url "https://patilpriyadarshini.github.io/migration-repo/reports/${{ github.run_number }}/index.html" \
          --arg repository "${{ github.repository }}" \
          --argjson html_content "$HTML_CONTENT" \
          --arg report_size "$(wc -c < playwright-report/index.html)" \
          '{
            timestamp: $timestamp,
            commit_sha: $commit,
            run_id: $run_id,
            run_number: $run_number,
            pages_url: $pages_url,
            repository: $repository,
            event_type: "playwright_report_published",
            html_content: $html_content,
            report_size_bytes: ($report_size | tonumber),
            content_type: "text/html"
          }')
        
        # Send to n8n webhook with retry logic
        if [ -n "${{ secrets.N8N_WEBHOOK_URL }}" ]; then
          echo "Sending HTML report content to n8n webhook..."
          echo "Report size: $(wc -c < playwright-report/index.html) bytes"
          
          curl -X POST \
            -H "Content-Type: application/json" \
            -d "$REPORT_DATA" \
            "${{ secrets.N8N_WEBHOOK_URL }}" \
            --max-time 60 \
            --retry 2 \
            --retry-delay 5 \
            --fail-with-body || {
              echo "Webhook failed, but continuing workflow..."
              echo "Webhook URL: ${{ secrets.N8N_WEBHOOK_URL }}"
              echo "Payload size: $(echo "$REPORT_DATA" | wc -c) bytes"
            }
        else
          echo "N8N_WEBHOOK_URL not configured, skipping webhook notification"
        fi
